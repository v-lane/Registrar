@page "/newstudent"
@using Student = Registrar.Models.Student
@using Registrar.Models
@using Registrar.Data
@inject RegistrarDbContext context;
@inject NavigationManager Nav
@rendermode InteractiveServer


<PageTitle>Add Student</PageTitle>
<h1>Add Student</h1>

<EditForm Model="AddStudent" FormName="NewStudent" OnValidSubmit="AddNewStudent" class="form m-5 bg-info bg-opacity-25 p-5">
    <DataAnnotationsValidator/>
    <div class="form-group mb-3">
        <label for="firstName" class="form-label">First Name</label>
        <InputText type="text" id="firstName" class="form-control" @bind-Value="AddStudent.FirstName"/>
        <ValidationMessage For="@(() => AddStudent.FirstName)" class="text-danger"/>
        </div>
    <div class="form-group mb-3">
        <label for="lastName" class="form-label">Last Name</label>
        <InputText type="text" id="lastName" class="form-control" @bind-Value="AddStudent.LastName"/>
        <ValidationMessage For="@(() => AddStudent.LastName)" class="text-danger"></ValidationMessage>
    </div>
    <div class="form-group mb-3">
        <label for="studentType" class="form-label">Student Type</label>
        <InputSelect class="form-control" id="studentType" @bind-Value="AddStudent.Type">
            <option value="">Select student type</option>
            @foreach (var type in studentTypes)
            {
                <option value="@type">@type</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => AddStudent.Type)" class="text-danger"></ValidationMessage>
    </div>
    <footer>
        @* <button type="submit">Submit</button> *@
        <Button Type="submit" ButtonStyle="btn-success" ButtonName="Add Student"></Button>
        <Button ButtonStyle="btn-danger" ButtonName="Cancel" OnClick="NavigateToStudents"></Button>
    </footer>
</EditForm>


@code {
    private List<string> studentTypes = Helper.GetStudentTypes();

    private void NavigateToStudents()
    {
        Nav.NavigateTo("/");
    }

    [SupplyParameterFromForm] private Student AddStudent { get; set; } = new();

    private void AddNewStudent()
    {
        context.Students.Add(AddStudent);
        context.SaveChanges();
        NavigateToStudents();
    }

}